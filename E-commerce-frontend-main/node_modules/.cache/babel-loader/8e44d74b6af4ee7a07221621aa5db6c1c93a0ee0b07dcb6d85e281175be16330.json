{"ast":null,"code":"var _jsxFileName = \"E:\\\\E-COMMERCE NEW\\\\E-commerce-frontend-main\\\\src\\\\components\\\\pages\\\\ProductAddPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom'; // Add Link import here\n// import ProductService from '../service/ProductService';\n\n// function ProductAddPage() {\n\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//         product_name: '',\n//         product_price: '',\n//         product_description: '',\n//         product_image: null // Added product_image state for file\n//     });\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     // Handle image file change\n//     const handleImageChange = (e) => {\n//         const file = e.target.files[0];  // Get the selected file\n//         setFormData({ ...formData, product_image: file });  // Update product_image with the file\n//     };\n\n//     const handleSubmit = async (e) => {\n\n//         e.preventDefault();\n//         // try {\n\n//         //     console.log(formData);\n//         //     await ProductService.SaveProduct(formData);\n\n//         //     setFormData({\n//         //         product_name: '',\n//         //         product_price: '',\n//         //         product_description: ''\n//         //     });\n\n//         //     alert('Product saved successfully');\n//         //     // navigate('/');\n\n//         // } catch (error) {\n//         //     console.error('Error registering product:', error);\n//         //     alert('An error occurred while saving the product');\n//         // }\n\n//         try {\n//             const formDataToSubmit = new FormData();\n//             formDataToSubmit.append('product', JSON.stringify({\n//                 product_name: formData.product_name,\n//                 product_price: formData.product_price,\n//                 product_description: formData.product_description\n//             }));\n\n//             if (formData.product_image) {\n//                 formDataToSubmit.append('image', formData.product_image); // Append image file to FormData\n//             }\n\n//             console.log(formData);\n//             await ProductService.SaveProduct(formDataToSubmit);\n\n//             // setFormData({\n//             //     product_name: '',\n//             //     product_price: '',\n//             //     product_description: '',\n//             //     product_image: null\n//             // });\n\n//             alert('Product saved successfully');\n//             // navigate('/');\n\n//         } catch (error) {\n//             console.error('Error registering product:', error);\n//             alert('An error occurred while saving the product');\n//         }\n\n//     };\n\n//     return (\n//         <div id='dvProductDetails'>\n//             <div className=\"ProductDetailsContainer\">\n//                 <h2>Product Details</h2>\n//                 <form onSubmit={handleSubmit}>\n\n//                     <div className='form-group'>\n//                         <label>Product Name</label>\n//                         <input type='text' name='product_name' value={formData.product_name} onChange={handleInputChange} />\n//                     </div>\n\n//                     <div className='form-group'>\n//                         <label>Product price</label>\n//                         <input type='text' name='product_price' value={formData.product_price} onChange={handleInputChange} />\n//                     </div>\n\n//                     <div className='form-group'>\n//                         <label>Product Description</label>\n//                         <input type='text' name='product_description' value={formData.product_description} onChange={handleInputChange} />\n//                     </div>\n//                     {/* Image Upload Field */}\n//                     <div className='form-group'>\n//                         <label>Product Image</label>\n//                         <input\n//                             type=\"file\"\n//                             name=\"product_image\"\n//                             accept=\"image/*\"\n//                             onChange={handleImageChange}  // Handle the image change\n//                         />\n//                     </div>\n\n//                     <button type=\"submit\">Save Product</button>\n\n//                     <br />\n//                     <Link to=\"/product-list\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>\n//                         View All Products!\n//                     </Link>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default ProductAddPage;\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import ProductService from '../service/ProductService';\n// import '../../style/productadd.css';\n\n// function ProductAddPage() {\n\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//         product_name: '',\n//         product_price: '',\n//         product_description: '',\n//         product_image: null // Added product_image state for file\n//     });\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     // Handle image file change\n//     const handleImageChange = (e) => {\n//         const file = e.target.files[0];  // Get the selected file\n//         setFormData({ ...formData, product_image: file });  // Update product_image with the file\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const formDataToSubmit = new FormData();\n//             formDataToSubmit.append('product', JSON.stringify({\n//                 product_name: formData.product_name,\n//                 product_price: formData.product_price,\n//                 product_description: formData.product_description\n//             }));\n\n//             if (formData.product_image) {\n//                 formDataToSubmit.append('image', formData.product_image); // Append image file to FormData\n//             }\n\n//             await ProductService.SaveProduct(formDataToSubmit);\n\n//             alert('Product saved successfully');\n//             navigate('/product-list'); // Redirect to the product list after saving\n\n//         } catch (error) {\n//             console.error('Error registering product:', error);\n//             alert('An error occurred while saving the product');\n//         }\n//     };\n\n//     return (\n//         <div className=\"product-add-container\">\n//             <div className=\"product-form-container\">\n//                 <h2 className=\"form-title\">Add New Product</h2>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"product_name\">Product Name</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"product_name\"\n//                             name=\"product_name\"\n//                             value={formData.product_name}\n//                             onChange={handleInputChange}\n//                             placeholder=\"Enter product name\"\n//                             required\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"product_price\">Product Price</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"product_price\"\n//                             name=\"product_price\"\n//                             value={formData.product_price}\n//                             onChange={handleInputChange}\n//                             placeholder=\"Enter product price\"\n//                             required\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"product_description\">Product Description</label>\n//                         <textarea\n//                             id=\"product_description\"\n//                             name=\"product_description\"\n//                             value={formData.product_description}\n//                             onChange={handleInputChange}\n//                             placeholder=\"Enter product description\"\n//                             rows=\"4\"\n//                             required\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"product_image\">Product Image</label>\n//                         <input\n//                             type=\"file\"\n//                             id=\"product_image\"\n//                             name=\"product_image\"\n//                             accept=\"image/*\"\n//                             onChange={handleImageChange}\n//                         />\n//                     </div>\n\n//                     <button type=\"submit\" className=\"submit-btn\">Save Product</button>\n//                 </form>\n\n//                 <Link to=\"/product-list\" className=\"view-products-link\">View All Products</Link>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default ProductAddPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, Link } from 'react-router-dom'; // Add useParams import\nimport ProductService from '../service/ProductService';\nimport '../../style/productadd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductUpdatePage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    productId\n  } = useParams(); // Get the product ID from the URL\n  const [formData, setFormData] = useState({\n    product_name: '',\n    product_price: '',\n    product_description: '',\n    product_image: null // Added product_image state for file\n  });\n\n  // Fetch the product details when the component is mounted\n  useEffect(() => {\n    const fetchProductDetails = async () => {\n      try {\n        const response = await ProductService.getProductById(productId);\n        const product = response.product; // Assuming the product details are under 'product'\n        setFormData({\n          product_name: product.product_name,\n          product_price: product.product_price,\n          product_description: product.product_description,\n          product_image: null // You may not want to pre-fill the image here\n        });\n      } catch (error) {\n        console.error('Error fetching product details:', error);\n        alert('Failed to fetch product details');\n      }\n    };\n    fetchProductDetails();\n  }, [productId]); // Re-fetch product details if productId changes\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle image file change\n  const handleImageChange = e => {\n    const file = e.target.files[0]; // Get the selected file\n    setFormData({\n      ...formData,\n      product_image: file\n    }); // Update product_image with the file\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formDataToSubmit = new FormData();\n      formDataToSubmit.append('product', JSON.stringify({\n        product_name: formData.product_name,\n        product_price: formData.product_price,\n        product_description: formData.product_description\n      }));\n      if (formData.product_image) {\n        formDataToSubmit.append('image', formData.product_image); // Append image file to FormData\n      }\n      await ProductService.updateProduct(productId, formDataToSubmit); // Use an update service method\n      alert('Product updated successfully');\n      navigate('/product-list'); // Redirect to the product list after updating\n    } catch (error) {\n      console.error('Error updating product:', error);\n      alert('An error occurred while updating the product');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-add-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product_name\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"product_name\",\n            name: \"product_name\",\n            value: formData.product_name,\n            onChange: handleInputChange,\n            placeholder: \"Enter product name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product_price\",\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"product_price\",\n            name: \"product_price\",\n            value: formData.product_price,\n            onChange: handleInputChange,\n            placeholder: \"Enter product price\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product_description\",\n            children: \"Product Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"product_description\",\n            name: \"product_description\",\n            value: formData.product_description,\n            onChange: handleInputChange,\n            placeholder: \"Enter product description\",\n            rows: \"4\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"product_image\",\n            children: \"Product Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"product_image\",\n            name: \"product_image\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/product-list\",\n        className: \"view-products-link\",\n        children: \"View All Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductUpdatePage, \"BmMRvujieBKNryT2CDLBqoPTvws=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ProductUpdatePage;\nexport default ProductUpdatePage;\nvar _c;\n$RefreshReg$(_c, \"ProductUpdatePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Link","ProductService","jsxDEV","_jsxDEV","ProductUpdatePage","_s","navigate","productId","formData","setFormData","product_name","product_price","product_description","product_image","fetchProductDetails","response","getProductById","product","error","console","alert","handleInputChange","e","name","value","target","handleImageChange","file","files","handleSubmit","preventDefault","formDataToSubmit","FormData","append","JSON","stringify","updateProduct","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","required","rows","accept","to","_c","$RefreshReg$"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ProductAddPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom'; // Add Link import here\r\n// import ProductService from '../service/ProductService';\r\n\r\n// function ProductAddPage() {\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const [formData, setFormData] = useState({\r\n//         product_name: '',\r\n//         product_price: '',\r\n//         product_description: '',\r\n//         product_image: null // Added product_image state for file\r\n//     });\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//     // Handle image file change\r\n//     const handleImageChange = (e) => {\r\n//         const file = e.target.files[0];  // Get the selected file\r\n//         setFormData({ ...formData, product_image: file });  // Update product_image with the file\r\n//     };\r\n\r\n\r\n//     const handleSubmit = async (e) => {\r\n\r\n//         e.preventDefault();\r\n//         // try {\r\n\r\n//         //     console.log(formData);\r\n//         //     await ProductService.SaveProduct(formData);\r\n\r\n//         //     setFormData({\r\n//         //         product_name: '',\r\n//         //         product_price: '',\r\n//         //         product_description: ''\r\n//         //     });\r\n\r\n//         //     alert('Product saved successfully');\r\n//         //     // navigate('/');\r\n\r\n//         // } catch (error) {\r\n//         //     console.error('Error registering product:', error);\r\n//         //     alert('An error occurred while saving the product');\r\n//         // }\r\n\r\n\r\n//         try {\r\n//             const formDataToSubmit = new FormData();\r\n//             formDataToSubmit.append('product', JSON.stringify({\r\n//                 product_name: formData.product_name,\r\n//                 product_price: formData.product_price,\r\n//                 product_description: formData.product_description\r\n//             }));\r\n\r\n//             if (formData.product_image) {\r\n//                 formDataToSubmit.append('image', formData.product_image); // Append image file to FormData\r\n//             }\r\n\r\n//             console.log(formData);\r\n//             await ProductService.SaveProduct(formDataToSubmit);\r\n\r\n//             // setFormData({\r\n//             //     product_name: '',\r\n//             //     product_price: '',\r\n//             //     product_description: '',\r\n//             //     product_image: null\r\n//             // });\r\n\r\n//             alert('Product saved successfully');\r\n//             // navigate('/');\r\n\r\n//         } catch (error) {\r\n//             console.error('Error registering product:', error);\r\n//             alert('An error occurred while saving the product');\r\n//         }\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     };\r\n\r\n//     return (\r\n//         <div id='dvProductDetails'>\r\n//             <div className=\"ProductDetailsContainer\">\r\n//                 <h2>Product Details</h2>\r\n//                 <form onSubmit={handleSubmit}>\r\n\r\n//                     <div className='form-group'>\r\n//                         <label>Product Name</label>\r\n//                         <input type='text' name='product_name' value={formData.product_name} onChange={handleInputChange} />\r\n//                     </div>\r\n\r\n//                     <div className='form-group'>\r\n//                         <label>Product price</label>\r\n//                         <input type='text' name='product_price' value={formData.product_price} onChange={handleInputChange} />\r\n//                     </div>\r\n\r\n//                     <div className='form-group'>\r\n//                         <label>Product Description</label>\r\n//                         <input type='text' name='product_description' value={formData.product_description} onChange={handleInputChange} />\r\n//                     </div>\r\n//                     {/* Image Upload Field */}\r\n//                     <div className='form-group'>\r\n//                         <label>Product Image</label>\r\n//                         <input\r\n//                             type=\"file\"\r\n//                             name=\"product_image\"\r\n//                             accept=\"image/*\"\r\n//                             onChange={handleImageChange}  // Handle the image change\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <button type=\"submit\">Save Product</button>\r\n\r\n//                     <br />\r\n//                     <Link to=\"/product-list\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>\r\n//                         View All Products!\r\n//                     </Link>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProductAddPage;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import ProductService from '../service/ProductService';\r\n// import '../../style/productadd.css';\r\n\r\n// function ProductAddPage() {\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const [formData, setFormData] = useState({\r\n//         product_name: '',\r\n//         product_price: '',\r\n//         product_description: '',\r\n//         product_image: null // Added product_image state for file\r\n//     });\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//     // Handle image file change\r\n//     const handleImageChange = (e) => {\r\n//         const file = e.target.files[0];  // Get the selected file\r\n//         setFormData({ ...formData, product_image: file });  // Update product_image with the file\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const formDataToSubmit = new FormData();\r\n//             formDataToSubmit.append('product', JSON.stringify({\r\n//                 product_name: formData.product_name,\r\n//                 product_price: formData.product_price,\r\n//                 product_description: formData.product_description\r\n//             }));\r\n\r\n//             if (formData.product_image) {\r\n//                 formDataToSubmit.append('image', formData.product_image); // Append image file to FormData\r\n//             }\r\n\r\n//             await ProductService.SaveProduct(formDataToSubmit);\r\n\r\n//             alert('Product saved successfully');\r\n//             navigate('/product-list'); // Redirect to the product list after saving\r\n\r\n//         } catch (error) {\r\n//             console.error('Error registering product:', error);\r\n//             alert('An error occurred while saving the product');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"product-add-container\">\r\n//             <div className=\"product-form-container\">\r\n//                 <h2 className=\"form-title\">Add New Product</h2>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"product_name\">Product Name</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"product_name\"\r\n//                             name=\"product_name\"\r\n//                             value={formData.product_name}\r\n//                             onChange={handleInputChange}\r\n//                             placeholder=\"Enter product name\"\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"product_price\">Product Price</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"product_price\"\r\n//                             name=\"product_price\"\r\n//                             value={formData.product_price}\r\n//                             onChange={handleInputChange}\r\n//                             placeholder=\"Enter product price\"\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"product_description\">Product Description</label>\r\n//                         <textarea\r\n//                             id=\"product_description\"\r\n//                             name=\"product_description\"\r\n//                             value={formData.product_description}\r\n//                             onChange={handleInputChange}\r\n//                             placeholder=\"Enter product description\"\r\n//                             rows=\"4\"\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"product_image\">Product Image</label>\r\n//                         <input\r\n//                             type=\"file\"\r\n//                             id=\"product_image\"\r\n//                             name=\"product_image\"\r\n//                             accept=\"image/*\"\r\n//                             onChange={handleImageChange}\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <button type=\"submit\" className=\"submit-btn\">Save Product</button>\r\n//                 </form>\r\n\r\n//                 <Link to=\"/product-list\" className=\"view-products-link\">View All Products</Link>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProductAddPage;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams, Link } from 'react-router-dom'; // Add useParams import\r\nimport ProductService from '../service/ProductService';\r\nimport '../../style/productadd.css';\r\n\r\nfunction ProductUpdatePage() {\r\n    const navigate = useNavigate();\r\n    const { productId } = useParams();  // Get the product ID from the URL\r\n    const [formData, setFormData] = useState({\r\n        product_name: '',\r\n        product_price: '',\r\n        product_description: '',\r\n        product_image: null // Added product_image state for file\r\n    });\r\n\r\n    // Fetch the product details when the component is mounted\r\n    useEffect(() => {\r\n        const fetchProductDetails = async () => {\r\n            try {\r\n                const response = await ProductService.getProductById(productId);\r\n                const product = response.product;  // Assuming the product details are under 'product'\r\n                setFormData({\r\n                    product_name: product.product_name,\r\n                    product_price: product.product_price,\r\n                    product_description: product.product_description,\r\n                    product_image: null  // You may not want to pre-fill the image here\r\n                });\r\n            } catch (error) {\r\n                console.error('Error fetching product details:', error);\r\n                alert('Failed to fetch product details');\r\n            }\r\n        };\r\n        \r\n        fetchProductDetails();\r\n    }, [productId]); // Re-fetch product details if productId changes\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    // Handle image file change\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];  // Get the selected file\r\n        setFormData({ ...formData, product_image: file });  // Update product_image with the file\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const formDataToSubmit = new FormData();\r\n            formDataToSubmit.append('product', JSON.stringify({\r\n                product_name: formData.product_name,\r\n                product_price: formData.product_price,\r\n                product_description: formData.product_description\r\n            }));\r\n\r\n            if (formData.product_image) {\r\n                formDataToSubmit.append('image', formData.product_image); // Append image file to FormData\r\n            }\r\n\r\n            await ProductService.updateProduct(productId, formDataToSubmit); // Use an update service method\r\n            alert('Product updated successfully');\r\n            navigate('/product-list'); // Redirect to the product list after updating\r\n        } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            alert('An error occurred while updating the product');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-add-container\">\r\n            <div className=\"product-form-container\">\r\n                <h2 className=\"form-title\">Update Product</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"product_name\">Product Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"product_name\"\r\n                            name=\"product_name\"\r\n                            value={formData.product_name}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter product name\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"product_price\">Product Price</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"product_price\"\r\n                            name=\"product_price\"\r\n                            value={formData.product_price}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter product price\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"product_description\">Product Description</label>\r\n                        <textarea\r\n                            id=\"product_description\"\r\n                            name=\"product_description\"\r\n                            value={formData.product_description}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter product description\"\r\n                            rows=\"4\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"product_image\">Product Image</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"product_image\"\r\n                            name=\"product_image\"\r\n                            accept=\"image/*\"\r\n                            onChange={handleImageChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"submit-btn\">Update Product</button>\r\n                </form>\r\n\r\n                <Link to=\"/product-list\" className=\"view-products-link\">View All Products</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductUpdatePage;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAOA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACjE,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAO,4BAA4B;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}