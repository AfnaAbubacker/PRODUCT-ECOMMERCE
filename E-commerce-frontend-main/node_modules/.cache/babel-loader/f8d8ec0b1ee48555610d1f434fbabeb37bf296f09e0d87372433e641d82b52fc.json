{"ast":null,"code":"var _jsxFileName = \"E:\\\\User_management_Project\\\\user_management_frontend\\\\src\\\\components\\\\auth\\\\RegistrationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../service/UserService';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationPage() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: '',\n    city: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Call the register method from UserService\n\n      //const token = localStorage.getItem('token');\n      //await UserService.register(formData, token);\n\n      await UserService.register(formData);\n\n      // Clear the form fields after successful registration\n      setFormData({\n        name: '',\n        email: '',\n        password: '',\n        role: '',\n        city: ''\n      });\n      alert('User registered successfully');\n      navigate('/admin/user-management');\n    } catch (error) {\n      console.error('Error registering user:', error);\n      alert('An error occurred while registering user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 1\n  }, this);\n}\n_s(RegistrationPage, \"uo/8DJgUusiZvDQ0qvBTg0wplpY=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useEffect","UserService","useNavigate","Link","jsxDEV","_jsxDEV","RegistrationPage","_s","navigate","formData","setFormData","name","email","password","role","city","handleInputChange","e","value","target","handleSubmit","preventDefault","register","alert","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/User_management_Project/user_management_frontend/src/components/auth/RegistrationPage.jsx"],"sourcesContent":["import React, { useState,useEffect} from 'react';\r\nimport UserService from '../service/UserService';\r\nimport { useNavigate,Link  } from 'react-router-dom';\r\n\r\nfunction RegistrationPage() {\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        role: '',\r\n        city: ''\r\n    });\r\n\r\n   \r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Call the register method from UserService\r\n\r\n            //const token = localStorage.getItem('token');\r\n            //await UserService.register(formData, token);\r\n\r\n            await UserService.register(formData);\r\n            \r\n\r\n            // Clear the form fields after successful registration\r\n            setFormData({\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                role: '',\r\n                city: ''\r\n            });\r\n            alert('User registered successfully');\r\n            navigate('/admin/user-management');\r\n\r\n        } catch (error) {\r\n            console.error('Error registering user:', error);\r\n            alert('An error occurred while registering user');\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n      \r\n<div>\r\n\r\n</div>\r\n        \r\n    );\r\n}\r\n\r\nexport default RegistrationPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAChD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,WAAW,EAACC,IAAI,QAAS,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAGxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAG9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACrCY,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACV,CAAC,CAAC;EAIF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCT,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACE,IAAI,GAAGO;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACA;;MAEA;MACA;;MAEA,MAAMpB,WAAW,CAACqB,QAAQ,CAACb,QAAQ,CAAC;;MAGpC;MACAC,WAAW,CAAC;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE;MACV,CAAC,CAAC;MACFQ,KAAK,CAAC,8BAA8B,CAAC;MACrCf,QAAQ,CAAC,wBAAwB,CAAC;IAEtC,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CD,KAAK,CAAC,0CAA0C,CAAC;IACrD;EACJ,CAAC;EAED,oBAGJlB,OAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAGN;AAACtB,EAAA,CAzDQD,gBAAgB;EAAA,QAGJJ,WAAW;AAAA;AAAA4B,EAAA,GAHvBxB,gBAAgB;AA2DzB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}