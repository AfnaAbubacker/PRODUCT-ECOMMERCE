{"ast":null,"code":"var _jsxFileName = \"E:\\\\E-COMMERCE NEW\\\\E-commerce-frontend-main\\\\src\\\\components\\\\pages\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductService from '../service/ProductService';\n\n// Helper function to get image MIME type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getImageMimeType = imageData => {\n  if (imageData.startsWith('data:image/png;base64,')) {\n    return 'image/png';\n  } else if (imageData.startsWith('data:image/jpeg;base64,')) {\n    return 'image/jpeg';\n  }\n  return ''; // Return empty if MIME type is not detected\n};\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const dummyProducts = await ProductService.getAllProducts();\n      setProducts(dummyProducts.products);\n    };\n    fetchProducts(); // Fetch product data\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: products.map(product => {\n        // If product_image already includes the MIME type, use it\n        let imageSrc = product.product_image;\n\n        // Check if base64 string starts without the MIME type\n        if (!imageSrc.startsWith('data:image')) {\n          // Prepend MIME type if not present\n          const mimeType = getImageMimeType(imageSrc);\n          imageSrc = mimeType ? `data:${mimeType};base64,${imageSrc}` : '';\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-card\",\n          children: [imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSrc,\n            alt: product.product_name,\n            className: \"product-image\",\n            style: {\n              width: '100%',\n              height: 'auto',\n              maxHeight: '300px',\n              objectFit: 'cover',\n              borderRadius: '8px',\n              back\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 3\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"product-name\",\n            children: product.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-description\",\n            children: product.product_description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-rating\",\n            children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: index < product.rating ? 'filled' : 'empty',\n              children: \"\\u2605\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/view-product/${product.product_id}`,\n            className: \"view-button\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, product.product_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","Link","ProductService","jsxDEV","_jsxDEV","getImageMimeType","imageData","startsWith","ProductList","_s","products","setProducts","fetchProducts","dummyProducts","getAllProducts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","imageSrc","product_image","mimeType","src","alt","product_name","style","width","height","maxHeight","objectFit","borderRadius","back","product_description","Array","_","index","rating","to","product_id","_c","$RefreshReg$"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ProductList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductService from '../service/ProductService';\r\n\r\n// Helper function to get image MIME type\r\nconst getImageMimeType = (imageData) => {\r\n  if (imageData.startsWith('data:image/png;base64,')) {\r\n    return 'image/png';\r\n  } else if (imageData.startsWith('data:image/jpeg;base64,')) {\r\n    return 'image/jpeg';\r\n  }\r\n  return ''; // Return empty if MIME type is not detected\r\n};\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const dummyProducts = await ProductService.getAllProducts();\r\n      setProducts(dummyProducts.products);\r\n    };\r\n\r\n    fetchProducts(); // Fetch product data\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      <h2 className=\"heading\">Product List</h2>\r\n      <div className=\"product-container\">\r\n        {products.map((product) => {\r\n          // If product_image already includes the MIME type, use it\r\n          let imageSrc = product.product_image;\r\n\r\n          // Check if base64 string starts without the MIME type\r\n          if (!imageSrc.startsWith('data:image')) {\r\n            // Prepend MIME type if not present\r\n            const mimeType = getImageMimeType(imageSrc);\r\n            imageSrc = mimeType ? `data:${mimeType};base64,${imageSrc}` : '';\r\n          }\r\n\r\n          return (\r\n            <div className=\"product-card\" key={product.product_id} >\r\n              {/* {imageSrc ? (\r\n                <img src={imageSrc} alt={product.product_name} className=\"product-image\" />\r\n              ) : null} */}\r\n              {imageSrc ? (\r\n  <img \r\n    src={imageSrc} \r\n    alt={product.product_name} \r\n    className=\"product-image\" \r\n    style={{\r\n      width: '100%',\r\n      height: 'auto',\r\n      maxHeight: '300px',\r\n      objectFit: 'cover',\r\n      borderRadius: '8px',\r\n      back\r\n    }} \r\n  />\r\n) : null}\r\n\r\n              <h3 className=\"product-name\">{product.product_name}</h3>\r\n              <p className=\"product-description\">{product.product_description}</p>\r\n              <div className=\"product-rating\">\r\n                {[...Array(5)].map((_, index) => (\r\n                  <span key={index} className={index < product.rating ? 'filled' : 'empty'}>\r\n                    â˜…\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <Link to={`/view-product/${product.product_id}`} className=\"view-button\">\r\n                View\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}