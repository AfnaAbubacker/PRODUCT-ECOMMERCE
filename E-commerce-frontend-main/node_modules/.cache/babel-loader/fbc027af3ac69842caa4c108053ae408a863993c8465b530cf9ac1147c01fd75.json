{"ast":null,"code":"import axios from \"axios\";\nclass RatingReviewService {\n  static async SaveRatingReview(userData) {\n    try {\n      const response = await axios.post(`${RatingReviewService.BASE_URL}/auth/ReviewRating-add`, userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async getExistRatingReviewByUserId(requestData) {\n    try {\n      const response = await axios.post(`${RatingReviewService.BASE_URL}/auth/ReviewRating-existing/`, requestData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async updateReviewRatingDetails(reviewId, reviewData) {\n    try {\n      con;\n      const response = await axios.put(`${RatingReviewService.BASE_URL}/auth/update-review/${reviewId}`, reviewData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*AUTHENTICATION CHECKER*/\n\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === \"ADMIN\";\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === \"USER\";\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nRatingReviewService.BASE_URL = \"http://localhost:1010\";\nexport default RatingReviewService;","map":{"version":3,"names":["axios","RatingReviewService","SaveRatingReview","userData","response","post","BASE_URL","data","error","getExistRatingReviewByUserId","requestData","updateReviewRatingDetails","reviewId","reviewData","con","put","logout","localStorage","removeItem","isAuthenticated","token","getItem","isAdmin","role","isUser","adminOnly"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/service/RatingReviewService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nclass RatingReviewService {\r\n\r\n    static BASE_URL = \"http://localhost:1010\";\r\n\r\n\r\n\r\n    static async SaveRatingReview(userData) {\r\n        try {\r\n            const response = await axios.post(`${RatingReviewService.BASE_URL}/auth/ReviewRating-add`, userData)\r\n            return response.data;\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    static async getExistRatingReviewByUserId(requestData) {\r\n        try {\r\n\r\n            const response = await axios.post(`${RatingReviewService.BASE_URL}/auth/ReviewRating-existing/`,requestData)\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async updateReviewRatingDetails(reviewId,reviewData){\r\n        try{\r\n            con\r\n            const response = await axios.put(`${RatingReviewService.BASE_URL}/auth/update-review/${reviewId}`,reviewData)\r\n            return response.data;\r\n\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /*AUTHENTICATION CHECKER*/\r\n\r\n    static logout() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('role')\r\n\r\n    }\r\n\r\n    static isAuthenticated() {\r\n        const token = localStorage.getItem('token')\r\n        return !!token\r\n    }\r\n\r\n    static isAdmin() {\r\n        const role = localStorage.getItem('role')\r\n        return role === \"ADMIN\"\r\n    }\r\n\r\n    static isUser() {\r\n        const role = localStorage.getItem('role')\r\n        return role === \"USER\"\r\n    }\r\n\r\n    static adminOnly() {\r\n        return this.isAuthenticated() && this.isAdmin();\r\n\r\n    }\r\n}\r\n\r\nexport default RatingReviewService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,mBAAmB,CAAC;EAMtB,aAAaC,gBAAgBA,CAACC,QAAQ,EAAE;IACpC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,mBAAmB,CAACK,QAAQ,wBAAwB,EAAEH,QAAQ,CAAC;MACpG,OAAOC,QAAQ,CAACG,IAAI;IAExB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAGA,aAAaC,4BAA4BA,CAACC,WAAW,EAAE;IACnD,IAAI;MAEA,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,mBAAmB,CAACK,QAAQ,8BAA8B,EAACI,WAAW,CAAC;MAC5G,OAAON,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,aAAaG,yBAAyBA,CAACC,QAAQ,EAACC,UAAU,EAAC;IACvD,IAAG;MACCC,GAAG;MACH,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACe,GAAG,CAAC,GAAGd,mBAAmB,CAACK,QAAQ,uBAAuBM,QAAQ,EAAE,EAACC,UAAU,CAAC;MAC7G,OAAOT,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,KAAK,EAAC;MACT,MAAMA,KAAK;IACf;EACJ;;EAEA;;EAEA,OAAOQ,MAAMA,CAAA,EAAG;IACZC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EAEnC;EAEA,OAAOC,eAAeA,CAAA,EAAG;IACrB,MAAMC,KAAK,GAAGH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACD,KAAK;EAClB;EAEA,OAAOE,OAAOA,CAAA,EAAG;IACb,MAAMC,IAAI,GAAGN,YAAY,CAACI,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,OAAO;EAC3B;EAEA,OAAOC,MAAMA,CAAA,EAAG;IACZ,MAAMD,IAAI,GAAGN,YAAY,CAACI,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,MAAM;EAC1B;EAEA,OAAOE,SAASA,CAAA,EAAG;IACf,OAAO,IAAI,CAACN,eAAe,CAAC,CAAC,IAAI,IAAI,CAACG,OAAO,CAAC,CAAC;EAEnD;AACJ;AAjEMrB,mBAAmB,CAEdK,QAAQ,GAAG,uBAAuB;AAiE7C,eAAeL,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}