{"ast":null,"code":"import axios from \"axios\";\nclass RatingReviewService {\n  static async SaveRatingReview(formData) {\n    try {\n      if (!rating || !review) {\n        throw new Error(\"Rating and review are required\");\n      }\n      const response = await axios.post(`${RatingReviewService.BASE_URL}/auth/ReviewRating-add`, {\n        rating,\n        review\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*AUTHENTICATION CHECKER*/\n\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === \"ADMIN\";\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === \"USER\";\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nRatingReviewService.BASE_URL = \"http://localhost:1010\";\nexport default RatingReviewService;","map":{"version":3,"names":["axios","RatingReviewService","SaveRatingReview","formData","rating","review","Error","response","post","BASE_URL","data","error","logout","localStorage","removeItem","isAuthenticated","token","getItem","isAdmin","role","isUser","adminOnly"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/service/RatingReviewService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n class RatingReviewService{\r\n\r\n        static BASE_URL = \"http://localhost:1010\";\r\n\r\n       \r\n        static async SaveRatingReview(formData){\r\n            try{\r\n                if (!rating || !review) {\r\n                    throw new Error(\"Rating and review are required\");\r\n                }\r\n        \r\n                const response = await axios.post(`${RatingReviewService.BASE_URL}/auth/ReviewRating-add`,{rating, review})\r\n                return response.data;\r\n\r\n            }catch(error){\r\n                throw error;\r\n            }   \r\n        }\r\n\r\n    \r\n\r\n        /*AUTHENTICATION CHECKER*/\r\n\r\n        static logout(){\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('role')\r\n\r\n        }\r\n\r\n        static isAuthenticated(){\r\n            const token = localStorage.getItem('token')\r\n            return !!token\r\n        }\r\n\r\n        static isAdmin(){\r\n            const role = localStorage.getItem('role')\r\n            return role === \"ADMIN\"\r\n        }\r\n\r\n        static isUser(){\r\n            const role = localStorage.getItem('role')\r\n            return role === \"USER\"\r\n        }\r\n\r\n        static adminOnly(){\r\n            return this.isAuthenticated() && this.isAdmin();\r\n\r\n        }\r\n }\r\n\r\n export default RatingReviewService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAExB,MAAMC,mBAAmB;EAKlB,aAAaC,gBAAgBA,CAACC,QAAQ,EAAC;IACnC,IAAG;MACC,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;MAEA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,mBAAmB,CAACQ,QAAQ,wBAAwB,EAAC;QAACL,MAAM;QAAEC;MAAM,CAAC,CAAC;MAC3G,OAAOE,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,KAAK,EAAC;MACT,MAAMA,KAAK;IACf;EACJ;;EAIA;;EAEA,OAAOC,MAAMA,CAAA,EAAE;IACXC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EAEnC;EAEA,OAAOC,eAAeA,CAAA,EAAE;IACpB,MAAMC,KAAK,GAAGH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACD,KAAK;EAClB;EAEA,OAAOE,OAAOA,CAAA,EAAE;IACZ,MAAMC,IAAI,GAAGN,YAAY,CAACI,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,OAAO;EAC3B;EAEA,OAAOC,MAAMA,CAAA,EAAE;IACX,MAAMD,IAAI,GAAGN,YAAY,CAACI,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,MAAM;EAC1B;EAEA,OAAOE,SAASA,CAAA,EAAE;IACd,OAAO,IAAI,CAACN,eAAe,CAAC,CAAC,IAAI,IAAI,CAACG,OAAO,CAAC,CAAC;EAEnD;AACP;AAhDMjB,mBAAmB,CAEXQ,QAAQ,GAAG,uBAAuB;AAgDhD,eAAeR,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}