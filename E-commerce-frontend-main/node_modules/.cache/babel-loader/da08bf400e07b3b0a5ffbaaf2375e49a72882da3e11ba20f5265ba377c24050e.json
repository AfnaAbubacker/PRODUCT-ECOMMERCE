{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import ProductService from '../service/ProductService';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         // Fetch the products data\n//         const dummyProducts = await ProductService.getAllProducts();\n\n//         const productsWithReviews = await Promise.all(dummyProducts.products.map(async (product) => {\n//           const requestData = { product_id: product.product_id };\n//           let reviews = { ratingReviewDtoList: [] }; // Default to an empty array\n\n//           try {\n//             reviews = await ProductService.getProductAllRatingReviews(requestData);\n//             console.log(`API Response for product ${product.product_id}:`, reviews);\n//           } catch (err) {\n//             console.error(`Error fetching reviews for product ${product.product_id}:`, err);\n//           }\n\n//           const reviewList = reviews.ratingReviewDtoList || []; // Safely access ratingReviewDtoList\n//           const reviewCount = reviewList.length;\n\n//           const averageRating = reviewCount > 0\n//             ? reviewList.reduce((sum, review) => sum + (review.rating_value || 0), 0) / reviewCount\n//             : 0;\n\n//           const roundedAverageRating = Math.round(averageRating * 10) / 10;\n\n//           return {\n//             ...product,\n//             reviews,\n//             averageRating: roundedAverageRating,\n//             reviewCount,\n//           };\n//         }));\n\n//         setProducts(productsWithReviews);\n//       } catch (error) {\n//         console.error(\"Error fetching products or reviews:\", error);\n//       }\n//     };\n\n//     fetchProducts(); // Call the async function\n//   }, []);\n\n//   return (\n//     <div className=\"product-list-container\">\n//       <h2 className=\"heading\">Product List</h2>\n//       <div className=\"product-container\">\n//         {products.map((product) => (\n//           <div className=\"product-card\" key={product.product_id}>\n//             <img\n//               src={`data:image/jpeg;base64,${product.product_image}`}\n//               alt={product.product_name}\n//               className=\"product-image\"\n//             />\n//             <h3 className=\"product-name\">{product.product_name}</h3>\n//             <p className=\"product-description\">{product.product_description}</p>\n//             <div className=\"product-rating\">\n//               {/* Display filled and empty stars based on average rating */}\n//               {[...Array(5)].map((_, index) => (\n//                 <span key={index} className={index < product.averageRating ? 'filled' : 'empty'}>\n//                   ★\n//                 </span>\n//               ))}\n//               {/* Display the review count inside the parentheses */}\n//               {product.reviewCount !== undefined && (\n//                 <span className=\"review-count\" style={{ color: '#878787', fontSize: '15px'}}>\n//                   ({product.reviewCount || 0})\n//                 </span>\n//               )}\n//             </div>\n//             <Link to={`/view-product/${product.product_id}`} className=\"view-button\">View</Link>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProductList;","map":{"version":3,"names":[],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ProductList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import ProductService from '../service/ProductService';\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         // Fetch the products data\r\n//         const dummyProducts = await ProductService.getAllProducts();\r\n\r\n       \r\n//         const productsWithReviews = await Promise.all(dummyProducts.products.map(async (product) => {\r\n//           const requestData = { product_id: product.product_id };\r\n//           let reviews = { ratingReviewDtoList: [] }; // Default to an empty array\r\n\r\n//           try {\r\n//             reviews = await ProductService.getProductAllRatingReviews(requestData);\r\n//             console.log(`API Response for product ${product.product_id}:`, reviews);\r\n//           } catch (err) {\r\n//             console.error(`Error fetching reviews for product ${product.product_id}:`, err);\r\n//           }\r\n\r\n//           const reviewList = reviews.ratingReviewDtoList || []; // Safely access ratingReviewDtoList\r\n//           const reviewCount = reviewList.length;\r\n\r\n//           const averageRating = reviewCount > 0\r\n//             ? reviewList.reduce((sum, review) => sum + (review.rating_value || 0), 0) / reviewCount\r\n//             : 0;\r\n\r\n//           const roundedAverageRating = Math.round(averageRating * 10) / 10;\r\n\r\n//           return {\r\n//             ...product,\r\n//             reviews,\r\n//             averageRating: roundedAverageRating,\r\n//             reviewCount,\r\n//           };\r\n//         }));\r\n\r\n\r\n\r\n//         setProducts(productsWithReviews);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching products or reviews:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts(); // Call the async function\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"product-list-container\">\r\n//       <h2 className=\"heading\">Product List</h2>\r\n//       <div className=\"product-container\">\r\n//         {products.map((product) => (\r\n//           <div className=\"product-card\" key={product.product_id}>\r\n//             <img\r\n//               src={`data:image/jpeg;base64,${product.product_image}`}\r\n//               alt={product.product_name}\r\n//               className=\"product-image\"\r\n//             />\r\n//             <h3 className=\"product-name\">{product.product_name}</h3>\r\n//             <p className=\"product-description\">{product.product_description}</p>\r\n//             <div className=\"product-rating\">\r\n//               {/* Display filled and empty stars based on average rating */}\r\n//               {[...Array(5)].map((_, index) => (\r\n//                 <span key={index} className={index < product.averageRating ? 'filled' : 'empty'}>\r\n//                   ★\r\n//                 </span>\r\n//               ))}\r\n//               {/* Display the review count inside the parentheses */}\r\n//               {product.reviewCount !== undefined && (\r\n//                 <span className=\"review-count\" style={{ color: '#878787', fontSize: '15px'}}>\r\n//                   ({product.reviewCount || 0})\r\n//                 </span>\r\n//               )}\r\n//             </div>\r\n//             <Link to={`/view-product/${product.product_id}`} className=\"view-button\">View</Link>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}