{"ast":null,"code":"var _jsxFileName = \"E:\\\\E-COMMERCE NEW\\\\E-commerce-frontend-main\\\\src\\\\components\\\\pages\\\\ViewProduct.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport RatingReviewService from '../service/RatingReviewService';\nimport ProductService from '../service/ProductService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProduct() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [prodData, setProdData] = useState({\n    product_name: '',\n    product_price: '',\n    product_description: ''\n  });\n  useEffect(() => {\n    fetchProductDataById(id); // Pass the userId to fetchUserDataById\n  }, [id]);\n  const fetchProductDataById = async id => {\n    try {\n      const response = await ProductService.getProductById(id); // Pass userId to getUserById\n      console.log(response);\n      const {\n        product_name,\n        product_price,\n        product_description\n      } = response.singleProduct;\n      setProdData({\n        product_name,\n        product_price,\n        product_description\n      });\n    } catch (error) {\n      console.error('Error fetching product data:', error);\n    }\n  };\n  const [formData, setFormData] = useState({\n    rating_value: 0,\n    review_description: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleStarClick = index => {\n    setFormData({\n      ...formData,\n      rating_value: index + 1\n    }); // Set the rating (1-5)\n  };\n  const handleSubmitReview = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"Rating Value:\", formData.rating_value);\n      console.log(\"Review Description:\", formData.review_description);\n      await RatingReviewService.SaveRatingReview(formData);\n\n      // Clear the form fields after successful submission\n      setFormData({\n        rating_value: 0,\n        review_description: ''\n      });\n      alert('Review submitted successfully');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      alert('An error occurred while submitting the review');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-product-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: prodData.imageUrl,\n          alt: prodData.name,\n          className: \"product-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"product-name\",\n          children: prodData.pr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-rating\",\n          children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: index < formData.rating_value ? 'filled' : 'empty',\n            onClick: () => handleStarClick(index),\n            children: \"\\u2605\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"review-textbox\",\n          name: \"review_description\",\n          placeholder: \"Write your review here...\",\n          value: formData.review_description,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitReview,\n          className: \"submit-review-button\",\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: {\n            color: 'blue',\n            fontWeight: 'bold',\n            textDecoration: 'underline'\n          },\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewProduct, \"yv7Ci4dg6Jmz2Cr5lyCx/FDLvls=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ViewProduct;\nexport default ViewProduct;\nvar _c;\n$RefreshReg$(_c, \"ViewProduct\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useParams","RatingReviewService","ProductService","jsxDEV","_jsxDEV","ViewProduct","_s","id","navigate","prodData","setProdData","product_name","product_price","product_description","fetchProductDataById","response","getProductById","console","log","singleProduct","error","formData","setFormData","rating_value","review_description","handleInputChange","e","name","value","target","handleStarClick","index","handleSubmitReview","preventDefault","SaveRatingReview","alert","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","pr","Array","map","_","onClick","placeholder","onChange","required","to","style","color","fontWeight","textDecoration","_c","$RefreshReg$"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ViewProduct.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link, useParams } from 'react-router-dom';\r\nimport RatingReviewService from '../service/RatingReviewService';\r\nimport ProductService from '../service/ProductService';\r\n\r\nfunction ViewProduct() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [prodData, setProdData] = useState({\r\n    product_name: '',\r\n    product_price: '',\r\n    product_description: ''\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProductDataById(id); // Pass the userId to fetchUserDataById\r\n  }, [id]);\r\n\r\n  const fetchProductDataById = async (id) => {\r\n    try {\r\n\r\n      const response = await ProductService.getProductById(id); // Pass userId to getUserById\r\n      console.log(response);\r\n      const { product_name, product_price, product_description } = response.singleProduct;\r\n\r\n      setProdData({ product_name, product_price, product_description })\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching product data:', error);\r\n    }\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    rating_value: 0,\r\n    review_description: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleStarClick = (index) => {\r\n    setFormData({ ...formData, rating_value: index + 1 }); // Set the rating (1-5)\r\n  };\r\n\r\n  const handleSubmitReview = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(\"Rating Value:\", formData.rating_value);\r\n      console.log(\"Review Description:\", formData.review_description);\r\n      await RatingReviewService.SaveRatingReview(formData);\r\n\r\n      // Clear the form fields after successful submission\r\n      setFormData({\r\n        rating_value: 0,\r\n        review_description: '',\r\n      });\r\n      alert('Review submitted successfully');\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      alert('An error occurred while submitting the review');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-product-container\">\r\n      <div className=\"product-content\">\r\n        <div className=\"left-container\">\r\n          <img src={prodData.imageUrl} alt={prodData.name} className=\"product-image\" />\r\n        </div>\r\n\r\n        <div className=\"right-container\">\r\n        <h2 className=\"product-name\">{prodData.pr}</h2>\r\n\r\n\r\n          {/* Review Section with Star Rating */}\r\n          <div className=\"star-rating\">\r\n            {[...Array(5)].map((_, index) => (\r\n              <span\r\n                key={index}\r\n                className={index < formData.rating_value ? 'filled' : 'empty'}\r\n                onClick={() => handleStarClick(index)}\r\n              >\r\n                â˜…\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          <textarea\r\n            className=\"review-textbox\"\r\n            name=\"review_description\"\r\n            placeholder=\"Write your review here...\"\r\n            value={formData.review_description}\r\n            onChange={handleInputChange}\r\n            required\r\n          ></textarea>\r\n\r\n          <button onClick={handleSubmitReview} className=\"submit-review-button\">\r\n            Submit Review\r\n          </button>\r\n\r\n          <br />\r\n          <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>\r\n            Back to Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}