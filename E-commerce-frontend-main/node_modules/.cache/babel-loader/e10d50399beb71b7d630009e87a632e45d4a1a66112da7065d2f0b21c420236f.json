{"ast":null,"code":"var _jsxFileName = \"E:\\\\E-COMMERCE NEW\\\\E-commerce-frontend-main\\\\src\\\\components\\\\pages\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import ProductService from '../service/ProductService';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         // Fetch the products data\n//         const dummyProducts = await ProductService.getAllProducts();\n\n//         const productsWithReviews = await Promise.all(dummyProducts.products.map(async (product) => {\n//           const requestData = { product_id: product.product_id };\n//           let reviews = { ratingReviewDtoList: [] }; // Default to an empty array\n\n//           try {\n//             reviews = await ProductService.getProductAllRatingReviews(requestData);\n//             console.log(`API Response for product ${product.product_id}:`, reviews);\n//           } catch (err) {\n//             console.error(`Error fetching reviews for product ${product.product_id}:`, err);\n//           }\n\n//           const reviewList = reviews.ratingReviewDtoList || []; // Safely access ratingReviewDtoList\n//           const reviewCount = reviewList.length;\n\n//           const averageRating = reviewCount > 0\n//             ? reviewList.reduce((sum, review) => sum + (review.rating_value || 0), 0) / reviewCount\n//             : 0;\n\n//           const roundedAverageRating = Math.round(averageRating * 10) / 10;\n\n//           return {\n//             ...product,\n//             reviews,\n//             averageRating: roundedAverageRating,\n//             reviewCount,\n//           };\n//         }));\n\n//         setProducts(productsWithReviews);\n//       } catch (error) {\n//         console.error(\"Error fetching products or reviews:\", error);\n//       }\n//     };\n\n//     fetchProducts(); // Call the async function\n//   }, []);\n\n//   return (\n//     <div className=\"product-list-container\">\n//       <h2 className=\"heading\">Product List</h2>\n//       <div className=\"product-container\">\n//         {products.map((product) => (\n//           <div className=\"product-card\" key={product.product_id}>\n//             <img\n//               src={`data:image/jpeg;base64,${product.product_image}`}\n//               alt={product.product_name}\n//               className=\"product-image\"\n//             />\n//             <h3 className=\"product-name\">{product.product_name}</h3>\n//             <p className=\"product-description\">{product.product_description}</p>\n//             <div className=\"product-rating\">\n//               {/* Display filled and empty stars based on average rating */}\n//               {[...Array(5)].map((_, index) => (\n//                 <span key={index} className={index < product.averageRating ? 'filled' : 'empty'}>\n//                   â˜…\n//                 </span>\n//               ))}\n//               {/* Display the review count inside the parentheses */}\n//               {product.reviewCount !== undefined && (\n//                 <span className=\"review-count\" style={{ color: '#878787', fontSize: '15px'}}>\n//                   ({product.reviewCount || 0})\n//                 </span>\n//               )}\n//             </div>\n//             <Link to={`/view-product/${product.product_id}`} className=\"view-button\">View</Link>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductService from '../service/ProductService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        // Fetch the products data\n        const dummyProducts = await ProductService.getAllProducts();\n        const productsWithReviews = await Promise.all(dummyProducts.products.map(async product => {\n          const requestData = {\n            product_id: product.product_id\n          };\n          let reviews = {\n            ratingReviewDtoList: []\n          }; // Default to an empty array\n\n          try {\n            reviews = await ProductService.getProductAllRatingReviews(requestData);\n            console.log(`API Response for product ${product.product_id}:`, reviews);\n          } catch (err) {\n            console.error(`Error fetching reviews for product ${product.product_id}:`, err);\n          }\n          const reviewList = reviews.ratingReviewDtoList || []; // Safely access ratingReviewDtoList\n          const reviewCount = reviewList.length;\n          const averageRating = reviewCount > 0 ? reviewList.reduce((sum, review) => sum + (review.rating_value || 0), 0) / reviewCount : 0;\n          const roundedAverageRating = Math.round(averageRating * 10) / 10;\n          return {\n            ...product,\n            reviews,\n            averageRating: roundedAverageRating,\n            reviewCount\n          };\n        }));\n        setProducts(productsWithReviews);\n      } catch (error) {\n        console.error(\"Error fetching products or reviews:\", error);\n      }\n    };\n    fetchProducts(); // Call the async function\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${product.product_image}`,\n          alt: product.product_name,\n          className: \"product-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"product-name\",\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"product-description\",\n          children: product.product_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-rating\",\n          children: [[...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: index < product.averageRating ? 'filled' : 'empty',\n            children: \"\\u2605\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)), product.reviewCount !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"review-count\",\n            style: {\n              color: '#878787',\n              fontSize: '15px'\n            },\n            children: [\"(\", product.reviewCount || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/view-product/${product.product_id}`,\n          className: \"view-button\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, product.product_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .product-list-container {\n            margin: 20px auto;\n            padding: 20px;\n            max-width: 1200px; /* Fixed maximum width for the entire container */\n          }\n\n          .heading {\n            text-align: center;\n            font-size: 2rem;\n            margin-bottom: 20px;\n            color: #333;\n          }\n\n          .product-container {\n            display: grid;\n            grid-template-columns: repeat(5, 1fr); /* 5 items in each row */\n            gap: 20px; /* Space between grid items */\n            justify-content: center;\n            align-content: center;\n            max-width: 1200px; /* Container fixed width */\n            margin: 0 auto;\n          }\n\n          .product-card {\n            width: 200px; /* Fixed width for each card */\n            background-color: #fff;\n            border-radius: 10px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            overflow: hidden;\n            padding: 15px;\n            text-align: center;\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n          }\n\n          .product-card:hover {\n            transform: translateY(-10px);\n            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\n          }\n\n          .product-image {\n            width: 180px;  /* Fixed width for images */\n            height: 180px; /* Fixed height for images */\n            object-fit: cover; /* Ensures image aspect ratio is maintained */\n            border-radius: 10px;\n            margin: 0 auto;\n          }\n\n          .product-name {\n            font-size: 1rem;\n            margin-top: 10px;\n            font-weight: bold;\n            color: #333;\n          }\n\n          .product-description {\n            font-size: 0.9rem;\n            color: #555;\n            margin: 10px 0;\n          }\n\n          .product-rating {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-top: 10px;\n            margin-botton:10px;\n          }\n\n          .filled {\n            color: #ff9800;\n          }\n\n          .empty {\n            color: #dcdcdc;\n          }\n\n          .review-count {\n            margin-left: 10px;\n          }\n\n          .view-button {\n            margin-top: 150px;\n            padding: 10px 20px;\n            background-color: #007bff;\n            color: white;\n            border: none;\n            border-radius: 5px;\n            text-decoration: none;\n            font-weight: bold;\n            font-size: 0.9rem;\n          }\n\n          .view-button:hover {\n            background-color: #0056b3;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","Link","ProductService","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetchProducts","dummyProducts","getAllProducts","productsWithReviews","Promise","all","map","product","requestData","product_id","reviews","ratingReviewDtoList","getProductAllRatingReviews","console","log","err","error","reviewList","reviewCount","length","averageRating","reduce","sum","review","rating_value","roundedAverageRating","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","product_image","alt","product_name","product_description","Array","_","index","undefined","style","color","fontSize","to","_c","$RefreshReg$"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ProductList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import ProductService from '../service/ProductService';\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         // Fetch the products data\r\n//         const dummyProducts = await ProductService.getAllProducts();\r\n\r\n       \r\n//         const productsWithReviews = await Promise.all(dummyProducts.products.map(async (product) => {\r\n//           const requestData = { product_id: product.product_id };\r\n//           let reviews = { ratingReviewDtoList: [] }; // Default to an empty array\r\n\r\n//           try {\r\n//             reviews = await ProductService.getProductAllRatingReviews(requestData);\r\n//             console.log(`API Response for product ${product.product_id}:`, reviews);\r\n//           } catch (err) {\r\n//             console.error(`Error fetching reviews for product ${product.product_id}:`, err);\r\n//           }\r\n\r\n//           const reviewList = reviews.ratingReviewDtoList || []; // Safely access ratingReviewDtoList\r\n//           const reviewCount = reviewList.length;\r\n\r\n//           const averageRating = reviewCount > 0\r\n//             ? reviewList.reduce((sum, review) => sum + (review.rating_value || 0), 0) / reviewCount\r\n//             : 0;\r\n\r\n//           const roundedAverageRating = Math.round(averageRating * 10) / 10;\r\n\r\n//           return {\r\n//             ...product,\r\n//             reviews,\r\n//             averageRating: roundedAverageRating,\r\n//             reviewCount,\r\n//           };\r\n//         }));\r\n\r\n\r\n\r\n//         setProducts(productsWithReviews);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching products or reviews:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts(); // Call the async function\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"product-list-container\">\r\n//       <h2 className=\"heading\">Product List</h2>\r\n//       <div className=\"product-container\">\r\n//         {products.map((product) => (\r\n//           <div className=\"product-card\" key={product.product_id}>\r\n//             <img\r\n//               src={`data:image/jpeg;base64,${product.product_image}`}\r\n//               alt={product.product_name}\r\n//               className=\"product-image\"\r\n//             />\r\n//             <h3 className=\"product-name\">{product.product_name}</h3>\r\n//             <p className=\"product-description\">{product.product_description}</p>\r\n//             <div className=\"product-rating\">\r\n//               {/* Display filled and empty stars based on average rating */}\r\n//               {[...Array(5)].map((_, index) => (\r\n//                 <span key={index} className={index < product.averageRating ? 'filled' : 'empty'}>\r\n//                   â˜…\r\n//                 </span>\r\n//               ))}\r\n//               {/* Display the review count inside the parentheses */}\r\n//               {product.reviewCount !== undefined && (\r\n//                 <span className=\"review-count\" style={{ color: '#878787', fontSize: '15px'}}>\r\n//                   ({product.reviewCount || 0})\r\n//                 </span>\r\n//               )}\r\n//             </div>\r\n//             <Link to={`/view-product/${product.product_id}`} className=\"view-button\">View</Link>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductService from '../service/ProductService';\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        // Fetch the products data\r\n        const dummyProducts = await ProductService.getAllProducts();\r\n\r\n        const productsWithReviews = await Promise.all(dummyProducts.products.map(async (product) => {\r\n          const requestData = { product_id: product.product_id };\r\n          let reviews = { ratingReviewDtoList: [] }; // Default to an empty array\r\n\r\n          try {\r\n            reviews = await ProductService.getProductAllRatingReviews(requestData);\r\n            console.log(`API Response for product ${product.product_id}:`, reviews);\r\n          } catch (err) {\r\n            console.error(`Error fetching reviews for product ${product.product_id}:`, err);\r\n          }\r\n\r\n          const reviewList = reviews.ratingReviewDtoList || []; // Safely access ratingReviewDtoList\r\n          const reviewCount = reviewList.length;\r\n\r\n          const averageRating = reviewCount > 0\r\n            ? reviewList.reduce((sum, review) => sum + (review.rating_value || 0), 0) / reviewCount\r\n            : 0;\r\n\r\n          const roundedAverageRating = Math.round(averageRating * 10) / 10;\r\n\r\n          return {\r\n            ...product,\r\n            reviews,\r\n            averageRating: roundedAverageRating,\r\n            reviewCount,\r\n          };\r\n        }));\r\n\r\n        setProducts(productsWithReviews);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products or reviews:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts(); // Call the async function\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      <h2 className=\"heading\">Product List</h2>\r\n      <div className=\"product-container\">\r\n        {products.map((product) => (\r\n          <div className=\"product-card\" key={product.product_id}>\r\n            <img\r\n              src={`data:image/jpeg;base64,${product.product_image}`}\r\n              alt={product.product_name}\r\n              className=\"product-image\"\r\n            />\r\n            <h3 className=\"product-name\">{product.product_name}</h3>\r\n            <p className=\"product-description\">{product.product_description}</p>\r\n            <div className=\"product-rating\">\r\n              {[...Array(5)].map((_, index) => (\r\n                <span key={index} className={index < product.averageRating ? 'filled' : 'empty'}>\r\n                  â˜…\r\n                </span>\r\n              ))}\r\n              {product.reviewCount !== undefined && (\r\n                <span className=\"review-count\" style={{ color: '#878787', fontSize: '15px' }}>\r\n                  ({product.reviewCount || 0})\r\n                </span>\r\n              )}\r\n            </div>\r\n            <Link to={`/view-product/${product.product_id}`} className=\"view-button\">View</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n          .product-list-container {\r\n            margin: 20px auto;\r\n            padding: 20px;\r\n            max-width: 1200px; /* Fixed maximum width for the entire container */\r\n          }\r\n\r\n          .heading {\r\n            text-align: center;\r\n            font-size: 2rem;\r\n            margin-bottom: 20px;\r\n            color: #333;\r\n          }\r\n\r\n          .product-container {\r\n            display: grid;\r\n            grid-template-columns: repeat(5, 1fr); /* 5 items in each row */\r\n            gap: 20px; /* Space between grid items */\r\n            justify-content: center;\r\n            align-content: center;\r\n            max-width: 1200px; /* Container fixed width */\r\n            margin: 0 auto;\r\n          }\r\n\r\n          .product-card {\r\n            width: 200px; /* Fixed width for each card */\r\n            background-color: #fff;\r\n            border-radius: 10px;\r\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n            overflow: hidden;\r\n            padding: 15px;\r\n            text-align: center;\r\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n          }\r\n\r\n          .product-card:hover {\r\n            transform: translateY(-10px);\r\n            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n          }\r\n\r\n          .product-image {\r\n            width: 180px;  /* Fixed width for images */\r\n            height: 180px; /* Fixed height for images */\r\n            object-fit: cover; /* Ensures image aspect ratio is maintained */\r\n            border-radius: 10px;\r\n            margin: 0 auto;\r\n          }\r\n\r\n          .product-name {\r\n            font-size: 1rem;\r\n            margin-top: 10px;\r\n            font-weight: bold;\r\n            color: #333;\r\n          }\r\n\r\n          .product-description {\r\n            font-size: 0.9rem;\r\n            color: #555;\r\n            margin: 10px 0;\r\n          }\r\n\r\n          .product-rating {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            margin-top: 10px;\r\n            margin-botton:10px;\r\n          }\r\n\r\n          .filled {\r\n            color: #ff9800;\r\n          }\r\n\r\n          .empty {\r\n            color: #dcdcdc;\r\n          }\r\n\r\n          .review-count {\r\n            margin-left: 10px;\r\n          }\r\n\r\n          .view-button {\r\n            margin-top: 150px;\r\n            padding: 10px 20px;\r\n            background-color: #007bff;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 5px;\r\n            text-decoration: none;\r\n            font-weight: bold;\r\n            font-size: 0.9rem;\r\n          }\r\n\r\n          .view-button:hover {\r\n            background-color: #0056b3;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}