{"ast":null,"code":"// // components/UserManagementPage.js\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import ProductService from '../service/ProductService';\n\n// function AllProducts() {\n\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch users data when the component mounts\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n\n//       //const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n//       const response = await ProductService.getAllProducts();\n//       //   console.log(response);\n//       setProducts(response.products); // Assuming the list of users is under the key 'ourUsersList'\n\n//     } catch (error) {\n//       console.error('Error fetching users:', error);\n//     }\n//   };\n\n//   const deleteProduct = async (userId) => {\n//     try {\n//       // Prompt for confirmation before deleting the user\n//       const confirmDelete = window.confirm('Are you sure you want to delete this product?');\n\n//       if (confirmDelete) {\n//         await ProductService.deleteProductById(userId);\n//         // After deleting the user, fetch the updated list of users\n//         fetchProducts();\n//       }\n//     } catch (error) {\n//       console.error('Error deleting product:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"product-management-container\">\n//       <h2>Product Management Page</h2>\n//       {/* <button className='reg-button'> <Link to=\"/register\">Add Product Details</Link></button> */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Product Name</th>\n//             <th>Product Price</th>\n//             <th>Product Description</th>\n//             <th></th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {products.map(item => (\n//             <tr key={item.product_id}>\n//               <td>{item.product_id}</td>\n//               <td>{item.product_name}</td>\n//               <td>{item.product_price}</td>\n//               <td>{item.product_description}</td>\n//               <td>\n//                 <button className='delete-button' onClick={() => deleteProduct(item.product_id)}>Delete</button>\n//                 <button> <Link to={`/auth/update-product/${item.product_id}`}>\n//                   Update\n//                 </Link>\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default AllProducts;","map":{"version":3,"names":[],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/AllProducts.jsx"],"sourcesContent":["// // components/UserManagementPage.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import ProductService from '../service/ProductService';\r\n\r\n// function AllProducts() {\r\n    \r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch users data when the component mounts\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n\r\n//       //const token = localStorage.getItem('token'); // Retrieve the token from localStorage\r\n//       const response = await ProductService.getAllProducts();\r\n//       //   console.log(response);\r\n//       setProducts(response.products); // Assuming the list of users is under the key 'ourUsersList'\r\n    \r\n//     } catch (error) {\r\n//       console.error('Error fetching users:', error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   const deleteProduct = async (userId) => {\r\n//     try {\r\n//       // Prompt for confirmation before deleting the user\r\n//       const confirmDelete = window.confirm('Are you sure you want to delete this product?');\r\n\r\n//       if (confirmDelete) {\r\n//         await ProductService.deleteProductById(userId);\r\n//         // After deleting the user, fetch the updated list of users\r\n//         fetchProducts();\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error deleting product:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"product-management-container\">\r\n//       <h2>Product Management Page</h2>\r\n//       {/* <button className='reg-button'> <Link to=\"/register\">Add Product Details</Link></button> */}\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Product Name</th>\r\n//             <th>Product Price</th>\r\n//             <th>Product Description</th>\r\n//             <th></th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {products.map(item => (\r\n//             <tr key={item.product_id}>\r\n//               <td>{item.product_id}</td>\r\n//               <td>{item.product_name}</td>\r\n//               <td>{item.product_price}</td>\r\n//               <td>{item.product_description}</td>\r\n//               <td>\r\n//                 <button className='delete-button' onClick={() => deleteProduct(item.product_id)}>Delete</button>\r\n//                 <button> <Link to={`/auth/update-product/${item.product_id}`}>\r\n//                   Update\r\n//                 </Link>\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AllProducts;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}