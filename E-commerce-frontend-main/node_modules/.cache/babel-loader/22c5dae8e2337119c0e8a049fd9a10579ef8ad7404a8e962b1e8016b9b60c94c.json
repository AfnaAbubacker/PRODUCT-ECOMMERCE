{"ast":null,"code":"var _jsxFileName = \"E:\\\\E-COMMERCE NEW\\\\E-commerce-frontend-main\\\\src\\\\components\\\\pages\\\\ViewProduct.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import UserService from '../service/UserService';\n// import { useNavigate, Link } from 'react-router-dom';\n// import RatingReviewService from '../service/RatingReviewService';\n\n// function ViewProduct() {\n\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//       rating_value: '',\n//       review_description: '',\n\n//     });\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Call the register method from UserService\n\n//             //const token = localStorage.getItem('token');\n//             //await UserService.register(formData, token);\n//             console.log(formData);\n//             await RatingReviewService.SaveRatingReview(formData);\n\n//             // Clear the form fields after successful registration\n//             setFormData({\n//               rating_value: '',\n//               review_description: '',\n//             });\n//             alert('User registered successfully');\n//            // navigate('/admin/user-management');\n\n//         } catch (error) {\n//             console.error('Error registering user:', error);\n//             alert('An error occurred while registering user');\n//         }\n//     };\n\n//     return (\n\n//         <div id='RegisterContainer'>\n//             <div className=\"auth-container registerPage\" >\n//                 <h2>Registration</h2>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label>Rating</label>\n//                         <input type=\"text\" name=\"rating_value\" value={formData.rating_value} onChange={handleInputChange} required />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label>Review:</label>\n//                         <input type=\"text\" name=\"review_description\" value={formData.review_description} onChange={handleInputChange} required />\n//                     </div>\n\n//                     <button type=\"submit\">Register</button>\n//                     <br />\n//                     <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>Back to Login</Link>\n//                 </form>\n//             </div>\n//         </div>\n\n//     );\n// }\n\n// export default ViewProduct;\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport RatingReviewService from '../service/RatingReviewService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProduct() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    rating_value: 0,\n    review_description: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleStarClick = index => {\n    setFormData({\n      ...formData,\n      rating_value: index + 1\n    }); // Set the rating (1-5)\n  };\n  const handleSubmitReview = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"Rating Value:\", formData.rating_value);\n      console.log(\"Review Description:\", formData.review_description);\n      await RatingReviewService.SaveRatingReview(formData);\n\n      // Clear the form fields after successful submission\n      setFormData({\n        rating_value: 0,\n        review_description: ''\n      });\n      alert('Review submitted successfully');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      alert('An error occurred while submitting the review');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-product-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"product-name\",\n          children: \"Submit Your Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-rating\",\n          children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: index < formData.rating_value ? 'filled' : 'empty',\n            onClick: () => handleStarClick(index),\n            children: \"\\u2605\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"review-textbox\",\n          name: \"review_description\",\n          placeholder: \"Write your review here...\",\n          value: formData.review_description,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitReview,\n          className: \"submit-review-button\",\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: {\n            color: 'blue',\n            fontWeight: 'bold',\n            textDecoration: 'underline'\n          },\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewProduct, \"gbhW2q7+E/4Hm3Ufpvf7hHWTs5k=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewProduct;\nexport default ViewProduct;\nvar _c;\n$RefreshReg$(_c, \"ViewProduct\");","map":{"version":3,"names":["React","useState","useNavigate","Link","RatingReviewService","jsxDEV","_jsxDEV","ViewProduct","_s","navigate","formData","setFormData","rating_value","review_description","handleInputChange","e","name","value","target","handleStarClick","index","handleSubmitReview","preventDefault","console","log","SaveRatingReview","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","onClick","placeholder","onChange","required","to","style","color","fontWeight","textDecoration","_c","$RefreshReg$"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ViewProduct.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import UserService from '../service/UserService';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import RatingReviewService from '../service/RatingReviewService';\r\n\r\n// function ViewProduct() {\r\n\r\n\r\n//     const navigate = useNavigate();\r\n\r\n\r\n//     const [formData, setFormData] = useState({\r\n//       rating_value: '',\r\n//       review_description: '',\r\n    \r\n//     });\r\n\r\n\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Call the register method from UserService\r\n\r\n//             //const token = localStorage.getItem('token');\r\n//             //await UserService.register(formData, token);\r\n//             console.log(formData);\r\n//             await RatingReviewService.SaveRatingReview(formData);\r\n\r\n\r\n//             // Clear the form fields after successful registration\r\n//             setFormData({\r\n//               rating_value: '',\r\n//               review_description: '',\r\n//             });\r\n//             alert('User registered successfully');\r\n//            // navigate('/admin/user-management');\r\n\r\n//         } catch (error) {\r\n//             console.error('Error registering user:', error);\r\n//             alert('An error occurred while registering user');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n\r\n\r\n//         <div id='RegisterContainer'>\r\n//             <div className=\"auth-container registerPage\" >\r\n//                 <h2>Registration</h2>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Rating</label>\r\n//                         <input type=\"text\" name=\"rating_value\" value={formData.rating_value} onChange={handleInputChange} required />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Review:</label>\r\n//                         <input type=\"text\" name=\"review_description\" value={formData.review_description} onChange={handleInputChange} required />\r\n//                     </div>\r\n                \r\n//                     <button type=\"submit\">Register</button>\r\n//                     <br />\r\n//                     <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>Back to Login</Link>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n\r\n//     );\r\n// }\r\n\r\n// export default ViewProduct;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport RatingReviewService from '../service/RatingReviewService';\r\n\r\nfunction ViewProduct() {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    rating_value: 0,\r\n    review_description: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleStarClick = (index) => {\r\n    setFormData({ ...formData, rating_value: index + 1 }); // Set the rating (1-5)\r\n  };\r\n\r\n  const handleSubmitReview = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(\"Rating Value:\", formData.rating_value);\r\n      console.log(\"Review Description:\", formData.review_description);\r\n      await RatingReviewService.SaveRatingReview(formData);\r\n\r\n      // Clear the form fields after successful submission\r\n      setFormData({\r\n        rating_value: 0,\r\n        review_description: '',\r\n      });\r\n      alert('Review submitted successfully');\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      alert('An error occurred while submitting the review');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-product-container\">\r\n      <div className=\"product-content\">\r\n        <div className=\"right-container\">\r\n          <h2 className=\"product-name\">Submit Your Review</h2>\r\n\r\n          {/* Review Section with Star Rating */}\r\n          <div className=\"star-rating\">\r\n            {[...Array(5)].map((_, index) => (\r\n              <span\r\n                key={index}\r\n                className={index < formData.rating_value ? 'filled' : 'empty'}\r\n                onClick={() => handleStarClick(index)}\r\n              >\r\n                ★\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          <textarea\r\n            className=\"review-textbox\"\r\n            name=\"review_description\"\r\n            placeholder=\"Write your review here...\"\r\n            value={formData.review_description}\r\n            onChange={handleInputChange}\r\n            required\r\n          ></textarea>\r\n\r\n          <button onClick={handleSubmitReview} className=\"submit-review-button\">\r\n            Submit Review\r\n          </button>\r\n\r\n          <br />\r\n          <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>\r\n            Back to Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}