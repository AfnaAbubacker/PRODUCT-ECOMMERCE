{"ast":null,"code":"var _jsxFileName = \"E:\\\\E-COMMERCE NEW\\\\E-commerce-frontend-main\\\\src\\\\components\\\\pages\\\\ViewProduct.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import UserService from '../service/UserService';\n// import { useNavigate, Link } from 'react-router-dom';\n// import RatingReviewService from '../service/RatingReviewService';\n\n// function ViewProduct() {\n\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//       rating_value: '',\n//       review_description: '',\n\n//     });\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Call the register method from UserService\n\n//             //const token = localStorage.getItem('token');\n//             //await UserService.register(formData, token);\n//             console.log(formData);\n//             await RatingReviewService.SaveRatingReview(formData);\n\n//             // Clear the form fields after successful registration\n//             setFormData({\n//               rating_value: '',\n//               review_description: '',\n//             });\n//             alert('User registered successfully');\n//            // navigate('/admin/user-management');\n\n//         } catch (error) {\n//             console.error('Error registering user:', error);\n//             alert('An error occurred while registering user');\n//         }\n//     };\n\n//     return (\n\n//         <div id='RegisterContainer'>\n//             <div className=\"auth-container registerPage\" >\n//                 <h2>Registration</h2>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label>Rating</label>\n//                         <input type=\"text\" name=\"rating_value\" value={formData.rating_value} onChange={handleInputChange} required />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label>Review:</label>\n//                         <input type=\"text\" name=\"review_description\" value={formData.review_description} onChange={handleInputChange} required />\n//                     </div>\n\n//                     <button type=\"submit\">Register</button>\n//                     <br />\n//                     <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>Back to Login</Link>\n//                 </form>\n//             </div>\n//         </div>\n\n//     );\n// }\n\n// export default ViewProduct;\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport RatingReviewService from '../service/RatingReviewService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProduct() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    rating_value: '',\n    review_description: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(formData);\n      await RatingReviewService.SaveRatingReview(formData);\n\n      // Clear the form fields after successful submission\n      setFormData({\n        rating_value: '',\n        review_description: ''\n      });\n      alert('Review submitted successfully');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      alert('An error occurred while submitting the review');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-product-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"product-name\",\n          children: \"Submit Your Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rating_value\",\n              children: \"Rating (1-5):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"rating_value\",\n              name: \"rating_value\",\n              min: \"1\",\n              max: \"5\",\n              value: formData.rating_value,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"review_description\",\n              children: \"Review:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"review_description\",\n              name: \"review_description\",\n              placeholder: \"Write your review here...\",\n              value: formData.review_description,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-review-button\",\n            children: \"Submit Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: {\n            color: 'blue',\n            fontWeight: 'bold',\n            textDecoration: 'underline'\n          },\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewProduct, \"xl1gOTMyQ0Yb30EcKIDCGiY/Q/4=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewProduct;\nexport default ViewProduct;\nvar _c;\n$RefreshReg$(_c, \"ViewProduct\");","map":{"version":3,"names":["React","useState","useNavigate","Link","RatingReviewService","jsxDEV","_jsxDEV","ViewProduct","_s","navigate","formData","setFormData","rating_value","review_description","handleInputChange","e","name","value","target","handleSubmit","preventDefault","console","log","SaveRatingReview","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","min","max","onChange","required","placeholder","to","style","color","fontWeight","textDecoration","_c","$RefreshReg$"],"sources":["E:/E-COMMERCE NEW/E-commerce-frontend-main/src/components/pages/ViewProduct.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import UserService from '../service/UserService';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n// import RatingReviewService from '../service/RatingReviewService';\r\n\r\n// function ViewProduct() {\r\n\r\n\r\n//     const navigate = useNavigate();\r\n\r\n\r\n//     const [formData, setFormData] = useState({\r\n//       rating_value: '',\r\n//       review_description: '',\r\n    \r\n//     });\r\n\r\n\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Call the register method from UserService\r\n\r\n//             //const token = localStorage.getItem('token');\r\n//             //await UserService.register(formData, token);\r\n//             console.log(formData);\r\n//             await RatingReviewService.SaveRatingReview(formData);\r\n\r\n\r\n//             // Clear the form fields after successful registration\r\n//             setFormData({\r\n//               rating_value: '',\r\n//               review_description: '',\r\n//             });\r\n//             alert('User registered successfully');\r\n//            // navigate('/admin/user-management');\r\n\r\n//         } catch (error) {\r\n//             console.error('Error registering user:', error);\r\n//             alert('An error occurred while registering user');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n\r\n\r\n//         <div id='RegisterContainer'>\r\n//             <div className=\"auth-container registerPage\" >\r\n//                 <h2>Registration</h2>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Rating</label>\r\n//                         <input type=\"text\" name=\"rating_value\" value={formData.rating_value} onChange={handleInputChange} required />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Review:</label>\r\n//                         <input type=\"text\" name=\"review_description\" value={formData.review_description} onChange={handleInputChange} required />\r\n//                     </div>\r\n                \r\n//                     <button type=\"submit\">Register</button>\r\n//                     <br />\r\n//                     <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>Back to Login</Link>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n\r\n//     );\r\n// }\r\n\r\n// export default ViewProduct;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport RatingReviewService from '../service/RatingReviewService';\r\n\r\nfunction ViewProduct() {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    rating_value: '',\r\n    review_description: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(formData);\r\n      await RatingReviewService.SaveRatingReview(formData);\r\n\r\n      // Clear the form fields after successful submission\r\n      setFormData({\r\n        rating_value: '',\r\n        review_description: '',\r\n      });\r\n      alert('Review submitted successfully');\r\n    } catch (error) {\r\n      console.error('Error submitting review:', error);\r\n      alert('An error occurred while submitting the review');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-product-container\">\r\n      <div className=\"product-content\">\r\n        <div className=\"right-container\">\r\n          <h2 className=\"product-name\">Submit Your Review</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rating_value\">Rating (1-5):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"rating_value\"\r\n                name=\"rating_value\"\r\n                min=\"1\"\r\n                max=\"5\"\r\n                value={formData.rating_value}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"review_description\">Review:</label>\r\n              <textarea\r\n                id=\"review_description\"\r\n                name=\"review_description\"\r\n                placeholder=\"Write your review here...\"\r\n                value={formData.review_description}\r\n                onChange={handleInputChange}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <button type=\"submit\" className=\"submit-review-button\">Submit Review</button>\r\n          </form>\r\n          <br />\r\n          <Link to=\"/login\" style={{ color: 'blue', fontWeight: 'bold', textDecoration: 'underline' }}>Back to Login</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewProduct;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}